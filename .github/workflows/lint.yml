name: Lint

on:
  pull_request:

jobs:
  lint:
    name: Lint with ${{ matrix.command }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        command: [black, pylint, flake8, isort]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Run ${{ matrix.command }}
        run: |
          find ./scripts -type f -print0 | xargs -0 chmod +x
          ./scripts/code-quality/run-${{ matrix.command }}.sh
