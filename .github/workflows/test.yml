name: Test

on:
  pull_request:

jobs:
  test-linux:
    name: Test on linux and generate coverage
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Cache poetry installation
        id: cache-poetry
        uses: actions/cache@v4
        with:
          key: poetry-${{ hashFiles('poetry.lock') }}-${{ matrix.python-version }}
          path: |
            ~/.local/bin/poetry
            ~/.local/share/pypoetry
            ~/.cache/pypoetry
      - name: Install poetry
        if: ${{ steps.cache-poetry.outputs.cache-hit != 'true' }}
        run: curl -sSL https://install.python-poetry.org | python3 -
      - name: Install project and its dependencies
        run: |
          export PATH="~/.local/share/pypoetry/bin:$PATH"
          poetry install
      - name: Run tests and generate coverage report
        run: scripts/run-pytest.sh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success() && matrix.python-version == '3.12'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./coverage.xml
          verbose: true
  test-windows:
    name: Test on windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install poetry
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
          Add-Content $env:GITHUB_PATH "$env:APPDATA\pypoetry\venv\Scripts"
      - name: Install project and its dependencies
        run: poetry install
      - name: Run tests and generate coverage report
        run: poetry run pytest
